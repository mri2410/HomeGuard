HomeGuard: Visitor Detection and Alert System
ECE 4564 - Network Application Design,
Team Immortal: Final Design Project, Fall 2014
Arun Rai, Mohammad Islam, and Yihan Pang

System Setup
================================================================================================================
This file lists instructions on how to setup the system and run the system.

One Raspberry Pi is connected with the webcam and the other one is connected with the sensor. 
Now, setup the WiFi communication between the Pi using the WiFy dongles. 
Help of setting up WiFy in a Raspberry Pi device is available online.
    
The System integrates two application modules: Publisher and Subscriber
The sytstem uses AMQP network protocol for message communication between publisher and subscriber applications. 
To configure AMQP on the system, RabbitMQ must be installed on the both modules.

Instructions for installing RabbitMQ on the system modules:
1. Install Pika
    sudo apt-get install python-pip
    sudo pip install pika

2. Install RabbitMq
    - Add the following line to your /etc/apt/sources.list:     
        deb http://www.rabbitmq.com/debian/ testing main
    - To avoid warnings about unsigned packages, add the public key to the trusted key list using apt-key(8):     
        wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
        sudo apt-key add rabbitmq-signing-key-public.asc
    - Run:  sudo apt-get update
    - Run: sudo apt-get install rabbitmq-server

3. Create user credentials and virtual hosts:
    sudo rabbitmqctl add_user "name" "password"
    sudo rabbitmqctl add_vhost "my_new_vhostname"
    sudo rabbitmqctl set_permissions -p "my_new_vhostname" "name"  ".*" ".*" ".*"


Next,
i) Publisher: 
    -This application module includes the Raspberry Pi that is connected to the sensor.
    -Instructions for running the application:
    -This application requires Qt 4.8 application software to be installed either on Raspberry Pi or 
        the Linux host machine such as Ubuntu.
        
        
Method A. By installing Qt on the Raspberry Pi
a)  Log into the Raspberry Pi using PuTTy, or similar application.
b)  Follow the instructions to install Qt libraries and compiler from the 
c)  web link:http://qt-project.org/wiki/RaspberryPi_Beginners_guide
d)  Make a directory in the pi (example, $ mkdir MyCoolSystem)
e)  cd into the directory and clone the project.
    $ git clone https://github.com/mri2410/HomeGuard
    Note: git must be installed before cloning the directory.
        Git installation: $ apt-get install git
      - run $ ifconfig to see the Pi’s IP address, note the IP address - it is listed on the second line of ‘wlan0’
      - cd into the directory, and open the getSensorData.py
            $ nano getSensorData.py
      - Navigate to function setCredentials(), set HOST, VIRTUAL_HOST, NAME, PASS fields, and save the file.
f) run $ publisher.py
g) open another terminal and cd into HostInformation
h) run $ qmake and $ make to generate an executable file.
i) run $ ./HostInfoSetup to run the application - host can setup the information as necessary by
   following the instructions on the application window.
j) open another, cd into VisitorMessageBox and follow instruction 10
k) run $ ./MessageBox to run the application - This will open an application window with a text box 
    where visitors can type their message and send to host by hitting ‘OK’ button.
    
Method B. By installing Qt on the host machine (Ubuntu):
a)  install Qt on the host machine: $ sudo apt-get install build-essential cmake gdb qt5-qmake qttools5-dev-tools
b)  install the fswebcam package:
c)  $ sudo apt-get install fswebcam
Follow instruction a-e from Method A and obtain the Pi’s wireless IP address.
d)  open a terminal on Ubuntu and run $ ssh pi@ip_adress to log into the Pi.
f)  cd into the project directory that is recently cloned. 
g)  cd into HostInformation
h)  run $ nano mainwindow.cpp
i)  Change the IP address in IP_Address with the Pi’s IP address
j)  cd into the VisitorMessageBox and follow instructions 6 and 7 above.
k)  run $ publisher.py in the Pi
l)  open two terminals on the host machine and follow instructions g-k from Method A

ii) Subscriber.py: 
        -This application module includes the Raspberry Pi that is connected to the camera.
        -This application requires twilio to  be installed on the Pi.
a)  log into the other Raspberyy Pi using PuTTy or similar applicattion or from a Linux host machin such as Ubuntu.
b)  install twilio by running, $ easy_install twilio
c)  cd into the directory and clone the project.
    $ git clone https://github.com/mri2410/HomeGuard
    Note: git must be installed before cloning the directory.
    Git installation: $ apt-get install git
      -  run $ ifconfig to see the Pi’s IP address, note the IP address - it is listed on the second line of ‘wlan0’
Note: In order for the host user to receive SMS, the host must obtain a twilio account.
d) run $ nano send_sms_twilio.py
e) find "to =_______  from =________" .
    -Fill in the field with the host’s phone number and the twilio number. Save the file.
f) run $ nano send_image_twilio.py and follow instruction e above.
g) cd into subscriber.py, and Navigate to function setCredentials() and set HOST, VIRTUAL_HOST, NAME, PASS fields.
h) open a terminal in the Pi and run $ subscriber.py
i) clone the project in the local host machine too for running recorded sound.
j) follow instruction g and run $ playSound.py

The system is ready!

Demonstration Walkthrough:
For demonstratino purpose, sensor can be installed at an appropriate height on a wall or door. The camera should be
installed above the sensor.

Set up the host information using the HostInfoSetup application. It allows the host user to setup 
information on how the message can be received. email, sms or both.

Stand infront of the sensor within one meter range for a few second. 
Check email or sms, a message to the link of the photo will be delivered to email, phone
or both as setup earlier.

Type message in the text box in the MessageBox window and click 'OK' button.
Message will be delivered to email, phone or both as setup earlier.

Specify Resolution:
The webcam used in this example has a resolution of 1280 x 720 so to specify the resolution 
I want the image to be taken at, use the -r flag:
fswebcam -r 1280x720 image2.jpg
2. Command Line Image Viewer:
$ sudo apt-get install links2
links2 -g <picture.jpg> 
 A window will come up with the captured picture.
 
 - Please, view README.md for system overview.

